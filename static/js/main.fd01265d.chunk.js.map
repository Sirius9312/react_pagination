{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","className","href","onClick","map","page","clickInPages","length","items","App","useState","setPerPage","setCurrentPage","startIndex","endIndex","visibleItems","slice","id","value","onChange","e","target","countItemsInPage","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAoB9C,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAA2B,IAAhBL,EAAoB,qBAAuB,YAA1D,SACE,mBACE,UAAQ,WACRK,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBN,EACfO,QAAS,WAzBK,IAAhBP,GACFC,EAAaD,EAAc,IAmBzB,oBAWAE,EAAMM,KAAI,SAACC,GAAD,OACR,oBAAIJ,UAAWL,IAAgBS,EAAO,mBAClC,YADJ,SAGE,mBACE,UAAQ,WACRJ,UAAWI,IAAST,EAChB,mBAAqB,YACzBM,KAAI,WAAMG,GACVF,QAAS,kBAnCA,SAACE,GAChBA,IAAST,GACXC,EAAaQ,GAiCUC,CAAaD,IAL9B,SAOGA,SAMT,oBAAIJ,UAAWL,IAAgBE,EAAMS,OAAS,qBAC1C,YADJ,SAGE,mBACE,UAAQ,WACRN,UAAU,YACVC,KAAK,QACL,gBAAeN,IAAgBE,EAAMS,OACrCJ,QAAS,WA5CXP,IAAgBE,EAAMS,QACxBV,EAAaD,EAAc,IAsCzB,wBChEFY,EAAQrB,EAAW,EAAG,IAAIiB,KAAI,SAAAb,GAAC,qBAAYA,MAEpCkB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBgB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBgB,EAApB,KAEMC,EAAcjB,EAAcD,EAAWA,EAAU,EACjDmB,EAAalB,EAAcD,EAAWa,EAAMD,OAC9CC,EAAMD,OAAUX,EAAcD,EAE5BoB,EAAeP,EAAMQ,MACzBH,EAAa,EAAGC,GAGlB,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCiB,EADjC,cACiDC,EADjD,eACgEN,EAAMD,OADtE,OAIA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAOvB,EACPwB,SAAU,SAACC,GACTT,GAAYS,EAAEC,OAAOH,OACrBN,EAAe,IAPnB,SAWI,CAAC,EAAG,EAAG,GAAI,IAAIR,KAAI,SAACkB,GAAD,OACjB,wBACEJ,MAAOI,EADT,SAGGA,WAOX,uBAAOC,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEP,MAAOc,EAAMD,OACbZ,QAASA,EACTC,YAAaA,EACbC,aAAce,IAGhB,6BAEIG,EAAaX,KAAI,SAACoB,GAAD,OACf,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjEpCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.fd01265d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const clickInPrevArrows = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const clickInPages = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const clickInNextArrows = () => {\n    if (currentPage !== pages.length) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={currentPage === 1 ? 'page-item disabled' : 'page-item'}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => clickInPrevArrows()}\n        >\n          «\n        </a>\n      </li>\n      {\n        pages.map((page) => (\n          <li className={currentPage === page ? 'page-item active'\n            : 'page-item'}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className={page === currentPage\n                ? 'page-link active' : 'page-link'}\n              href={`#${page}`}\n              onClick={() => clickInPages(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))\n      }\n\n      <li className={currentPage === pages.length ? 'page-item disabled'\n        : 'page-item'}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={() => clickInNextArrows()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startIndex = (currentPage * perPage) - perPage + 1;\n  const endIndex = ((currentPage * perPage) > items.length)\n    ? items.length : (currentPage * perPage);\n\n  const visibleItems = items.slice(\n    startIndex - 1, endIndex,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startIndex} - ${endIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              setPerPage(+e.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            {\n              [3, 5, 10, 20].map((countItemsInPage) => (\n                <option\n                  value={countItemsInPage}\n                >\n                  {countItemsInPage}\n                </option>\n              ))\n            }\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {\n          visibleItems.map((item) => (\n            <li data-cy=\"item\" key={item}>{item}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}